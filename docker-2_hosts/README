LiveAgent docker infra setup for 2 servers with LB on all of them, mysql, redis and elasticsearch on the 1st one.

Prerequisites:

* 3 physical/virtual hosts with enough RAM, CPU and disk space
* CENTOS 7 with SUDO privileges on all hosts
* compatible LA version (The newest should do)

Build info

    DO EVERY STEP ON ALL HOSTS UNTIL TOLD OTHERWISE
1.  Install GIT (yum install git) and run "git clone https://github.com/QualityUnit/LiveAgent-Docker.git"
2.  Enter version of docker setup you would like to install (2_hosts...) and create valid ssl.crt and ssl.key files
3.  Modify config.sh file and enter all requested info
4.  Run config.sh file with "chmod +x ./config.sh && ./config.sh"
5.  Enter "production/docker" directory on each host and run install_utils.sh script with "chmod +x ./install_utils.sh && ./install_utils.sh"
6.  Run docker-compose on each host after step 7 is done "/usr/local/bin/docker-compose up -d"
7.  Set up database - docker exec -i mysql mysql -e"source /tmp/createdb.sql;" (one command)
8.  Restart haproxy and xinetd on all hosts - "service xinetd restart && docker restart haproxy"
9.  Open your site for LA setup (site you entered in config.sh), STOP AFTER YOU LOG IN TO YOUR AGENT PANEL
10. Run "after_install.sh" on both hosts with "chmod +x ./after_install.sh && ./after_install"
11. Enter "your_private_ip:9000/haproxy_stats" into your browser, username: admin and password you entered in config.sh for haproxy and check if all hosts are UP
12. Enjoy

VERSION UPDATE

*  download/move new version of LA .zip file to "/opt/docker1" directory
*  run version_update.sh script - "chmod +x version_update.sh && ./version_update.sh"
*  follow instructions from the script

USEFUL DOCKER COMMANDS

*  docker --help        - all possible commands
*  docker ps            - diplay all running containers
*  docker ps -a         - display all containers
*  docker images        - display all images from which containers were build
*  docker start|stop|restart        - start, stop and restart container
*  docker rm|rmi        - remove container, remove image
*  docker volume prune  - remove all unused volumes
*  docker stats         - CPU, MEMORY, I/O stats of containers
*  docker logs -t container_name    - display container logs
*  docker cp <container_id>:/path/to/useful/file /local-path      - (useful when container won't start)
*  docker exec -it container_name bash      - enter bash shell of container (examples of shells: bash, mysql, redis-cli...)
*  /usr/local/bin/docker-compose up -d      - will bring up all containers stated in docker-compose.yml, when you destroy any container and it's image and you want to build it from the scratch with the same or different settings

LIVEAGENT PLUGINS

*  FLOAT_IP:10200 - put into IP address column when activating
*  unix:///var/run/clamav/clamd.sock - put into IP address column when activating
